@page
@model PRN222.RoomBooking.UserRazor.Pages.Bookings.BookingHistoryModel
@using PRN222.RoomBooking.Repositories.Enums

@{
    ViewData["Title"] = "Booking History";
}

<style>
    .container {
        padding-top: 2rem;
        padding-bottom: 2rem;
    }

    .page-title {
        font-size: 3.5rem;
        font-family: 'Montserrat', sans-serif;
        font-weight: 700;
        color: #003087;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
        margin-bottom: 2rem;
    }

    .alert {
        border-radius: 8px;
        font-size: 0.9rem;
    }

    .filter-card {
        border-radius: 10px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .form-control, .form-select {
        border-radius: 8px;
        border: 1px solid #ced4da;
        transition: border-color 0.3s ease, box-shadow 0.3s ease;
    }

        .form-control:focus, .form-select:focus {
            border-color: #0052cc;
            box-shadow: 0 0 5px rgba(0, 82, 204, 0.3);
        }

    .btn-primary {
        background: #0052cc;
        border: none;
        border-radius: 8px;
        padding: 8px 20px;
        font-weight: 500;
        transition: background 0.3s ease, transform 0.3s ease;
    }

        .btn-primary:hover {
            background: #003d99;
            transform: translateY(-2px);
        }

    .btn-success {
        background: #28a745;
        border: none;
        border-radius: 8px;
        padding: 8px 20px;
        font-weight: 500;
        transition: background 0.3s ease, transform 0.3s ease;
    }

        .btn-success:hover {
            background: #218838;
            transform: translateY(-2px);
        }

    .btn-danger {
        background: #dc3545;
        border: none;
        border-radius: 8px;
        padding: 5px 15px;
        font-weight: 500;
        transition: background 0.3s ease, transform 0.3s ease;
    }

        .btn-danger:hover {
            background: #b02a37;
            transform: translateY(-2px);
        }

    .table-card {
        border-radius: 10px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        overflow: hidden;
    }

    .table thead {
        background: #0052cc;
        color: #fff;
    }

    .table tbody tr {
        transition: background 0.3s ease;
    }

        .table tbody tr:hover {
            background: #f8f9fa;
        }

    .pagination .btn {
        border-radius: 8px;
        font-weight: 500;
        transition: background 0.3s ease, transform 0.3s ease;
    }

    .pagination .btn-outline-secondary {
        border-color: #6c757d;
        color: #6c757d;
    }

        .pagination .btn-outline-secondary:hover {
            background: #6c757d;
            color: #fff;
            transform: translateY(-2px);
        }

        .pagination .btn-outline-secondary.disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

    .pagination span {
        font-weight: 500;
        color: #0052cc;
    }
</style>

<div class="container mt-4">
    <h2 class="page-title text-center">Booking History</h2>

    <!-- Thông báo lỗi -->
    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div class="alert alert-danger">
            @Model.ErrorMessage
        </div>
    }

    <!-- Form lọc -->
    <div class="card p-3 mb-4 filter-card">
        <form method="get" class="row g-3">
            <div class="col-md-6">
                <label asp-for="StatusFilter" class="form-label fw-medium">Filter by Status</label>
                <select asp-for="StatusFilter" class="form-select" asp-items="Html.GetEnumSelectList<BookingStatus>()">
                    <option value="">All</option>
                </select>
            </div>
            <div class="col-12 text-center mt-2">
                <button type="submit" class="btn btn-primary" id="filterButton">
                    <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
                    <span class="button-text">Filter</span>
                </button>
            </div>
        </form>
    </div>

    <!-- Bảng lịch sử đặt phòng -->
    <div class="card table-card">
        <div class="card-body p-0">
            @if (Model.Bookings != null && Model.Bookings.Any())
            {
                <table class="table table-striped table-hover mb-0">
                    <thead>
                        <tr>
                            <th>Booking ID</th>
                            <th>Booking Date</th>
                            <th>Created Date</th>
                            <th>Purpose</th>
                            <th>Status</th>
                            <th>Room Details</th>
                            <th>Room Slots</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var booking in Model.Bookings)
                        {
                            <tr>
                                <td>@booking.BookingId</td>
                                <td>@booking.BookingDate.ToString("dd/MM/yyyy")</td>
                                <td>@booking.CreatedDate?.ToString("dd/MM/yyyy HH:mm")</td>
                                <td>@booking.Purpose</td>
                                <td>
                                    <span class="badge @(booking.BookingStatus == BookingStatus.Pending ? "bg-info" : booking.BookingStatus == BookingStatus.Booked ? "bg-warning" : "bg-danger")">
                                        @booking.BookingStatus
                                    </span>
                                </td>
                                <td>
                                    @foreach (var roomSlot in booking.RoomSlots)
                                    {
                                        <div>
                                            <strong>Room Name:</strong> @roomSlot.Room.RoomName <br />
                                            <strong>Campus:</strong> @roomSlot.Room.Campus?.CampusName <br />
                                            <strong>Capacity:</strong> @roomSlot.Room.Capacity <br />
                                            <strong>Status:</strong>
                                            <span class="badge @(roomSlot.Room.Status == RoomStatus.Available ? "bg-success" : roomSlot.Room.Status == RoomStatus.Booked ? "bg-warning" : "bg-danger")">
                                                @roomSlot.Room.Status
                                            </span>
                                        </div>
                                        break;
                                    }
                                </td>
                                <td>
                                    @foreach (var roomSlot in booking.RoomSlots)
                                    {
                                        <div>
                                            Slot @roomSlot.SlotNumber
                                            (@roomSlot.StartTime?.ToString("HH:mm") - @roomSlot.EndTime?.ToString("HH:mm"))
                                        </div>
                                    }
                                </td>
                                <td>
                                    @if (booking.BookingStatus == BookingStatus.Pending)
                                    {
                                        <a href="#" class="btn btn-danger btn-sm cancel-booking"
                                           data-booking-id="@booking.BookingId"
                                           onclick="confirmCancel(event, @booking.BookingId)">Cancel</a>
                                    }
                                    else
                                    {
                                        <span class="text-muted">@booking.BookingStatus</span>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p class="text-muted text-center">You have no bookings matching the selected filter.</p>
            }
        </div>
    </div>

    <!-- Phân trang -->
    <div class="d-flex justify-content-center align-items-center mt-4 pagination">
        <a asp-page="BookingHistory"
           asp-route-pageNumber="@(Model.PageNumber > 1 ? Model.PageNumber - 1 : 1)"
           asp-route-statusFilter="@Model.StatusFilter"
           class="btn btn-outline-secondary @(Model.PageNumber == 1 ? "disabled" : "")">Previous</a>

        <span class="mx-3">Page @Model.PageNumber of @Model.TotalPages</span>

        <a asp-page="BookingHistory"
           asp-route-pageNumber="@(Model.PageNumber < Model.TotalPages ? Model.PageNumber + 1 : Model.TotalPages)"
           asp-route-statusFilter="@Model.StatusFilter"
           class="btn btn-outline-secondary @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">Next</a>
    </div>

    <!-- Nút điều hướng -->
    <div class="mt-4 text-center">
        <a asp-page="/Index" class="btn btn-primary me-2">Back to Home</a>
        <a asp-page="/Bookings/CreateBooking" class="btn btn-success">Create New Booking</a>
    </div>
</div>

@section Scripts {
    <script>
        function confirmCancel(event, bookingId) {
            event.preventDefault();
            if (confirm("Are you sure you want to cancel this booking?")) {
                window.location.href = "/Bookings/CancelBooking?bookingId=" + bookingId;
            }
        }

                document.getElementById('filterButton').addEventListener('click', function () {
                    this.querySelector('.spinner-border').classList.remove('d-none');
                    this.querySelector('.button-text').textContent = 'Filtering...';
                });
    </script>
}