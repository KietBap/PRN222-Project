@using System.Security.Claims

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - PRN222.RoomBooking</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/PRN222.RoomBooking.UserRazor.styles.css" asp-append-version="true" />
</head>
<body class="bg-light d-flex flex-column min-vh-100">
    <header>
        <nav class="navbar navbar-expand-lg navbar-dark bg-primary shadow">
            <div class="container d-flex justify-content-between align-items-center">
                <a class="navbar-brand" asp-area="" asp-page="/Index">
                    <img src="/images/logo.png" alt="Logo" style="height: 50px; margin-right: 10px;">
                    <strong>RoomBooking</strong>
                </a>
                <div class="d-flex align-items-center">
                    @if (User.Identity.IsAuthenticated)
                    {
                        var userName = User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Name)?.Value;
                        <span class="text-white fw-bold me-3">Welcome, @userName</span>
                        <div class="dropdown me-3">
                            <a href="#" class="text-white position-relative" id="notificationDropdown" data-bs-toggle="dropdown">
                                <i class="bi bi-bell-fill" style="font-size: 1.5rem;"></i>
                                <span id="notificationCount" class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger d-none">0</span>
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end" id="notificationList" style="max-height: 300px; overflow-y: auto;"></ul>
                        </div>
                        <a class="btn btn-outline-light" asp-page="/User/Logout">Logout</a>
                    }
                    else
                    {
                        <a class="btn btn-light text-primary" asp-page="/User/Login">Login</a>
                    }
                </div>
            </div>
        </nav>
    </header>

    <div class="container flex-grow-1">
        <main role="main">
            @RenderBody()
        </main>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <script src="~/js/microsoft/signalr/dist/browser/signalr.js"></script>
    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/notificationHub")
            .withAutomaticReconnect()
            .configureLogging(signalR.LogLevel.Information)
            .build();

        connection.on("ReceiveNotification", (message) => {
            showToast(message);
            addNotification(message);
        });

        connection.on("RefreshBookingHistory", (bookingId) => {
            // Kiểm tra xem user có đang ở trang BookingHistory không
            if (window.location.pathname.toLowerCase().includes('/bookings/bookinghistory')) {
                window.location.reload(); // Tải lại trang nếu đang ở BookingHistory
            }
        });

        connection.start().catch(err => console.error(err));

        function showToast(message) {
            Toastify({
                text: message,
                duration: 3000,
                gravity: "top",
                position: "right",
                backgroundColor: "#4CAF50"
            }).showToast();
        }

        function addNotification(message) {
            const notificationList = document.getElementById("notificationList");
            const notificationCount = document.getElementById("notificationCount");

            const newItem = document.createElement("li");
            newItem.classList.add("dropdown-item");
            newItem.innerHTML = `<small class="text-muted">${new Date().toLocaleString()}</small><p>${message}</p>`;

            notificationList.prepend(newItem);
            notificationCount.innerText = parseInt(notificationCount.innerText || "0") + 1;
            notificationCount.classList.remove("d-none");
        }
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
